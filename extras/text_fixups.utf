# Saved user-buttons from the Find panel. Each button definition starts with
# a number between 0 (upper left button) and 23 (lower right button) and a
# colon. Next comes a Python dictionary { key:value, key:value...} in which
# each key is a string such as 'find' or 'regex' that names a part of the Find
# panel. Each value is either True, False, or a 'quoted string' In any quoted
# string, every backslash must be doubled!
7: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : False,
	'find' : '(\\s[\\.,;:?!\\-])|(-\\s)',
	'label' : 'spacep',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Whitespace preceding punctuation or after hyphen',
	'word' : None
}

8: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '\\W[01]\\W',
	'label' : '-01-',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Standalone 0 or 1',
	'word' : None
}

9: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : False,
	'find' : '(\\(([^)]|\\s)+\\()|(\\[([^]]|\\s)+\\[)|(\\{([^}]|\\s)+\\{)',
	'label' : 'unbalanced',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Unbalanced brackets',
	'word' : None
}

10: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : True,
	'find' : '\\.\\s*[a-z]',
	'label' : 'dota',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Period followed by lowercase (latin) letter',
	'word' : None
}

11: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : True,
	'find' : ',\\s*[A-Z]',
	'label' : 'commaA',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Comma followed by uppercase (latin) letter',
	'word' : None
}

12: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '\\n[^\\n]\\n',
	'label' : 'nXn',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Single-character line',
	'word' : None
}

13: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : True,
	'find' : '\\n\\n[a-z]',
	'label' : 'lcpara',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Paragraph starts with (ascii) lowercase',
	'word' : None
}

14: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '[\\x00FF-\\x2028\\x202A-\\xFBFF]',
	'label' : 'non-8859',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Characters not in ISO-8859-1',
	'word' : None
}

15: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : True,
	'find' : '[\\x0080-\\x00FF]',
	'label' : 'non-7-bit',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Characters between x80 and xFF',
	'word' : None
}

16: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '\\w[^\\.\\,?;:!\\]\\>\\)\\/][\\x0022\\x0027\\x00BB]?\\n\\n',
	'label' : 'paranop',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'No punctuation at paragraph-end',
	'word' : None
}

17: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '[^\\n]{76,}',
	'label' : 'line>75',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Line longer than 75 characters',
	'word' : None
}

18: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '[\\x002D\\x2010\\x2011]+\\n',
	'label' : 'eolhy',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Hyphen at end of line',
	'word' : None
}

19: {		'all' : None,
	'andnext' : True,
	'andprior' : None,
	'case' : False,
	'find' : '[\\x0020\\x00A0\\x2002-\\x200B\\x202F]+\\n',
	'label' : 'eolsp',
	'regex' : True,
	'rep1' : '\\n',
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Space at end of line',
	'word' : None
}

20: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : False,
	'find' : '/',
	'label' : '/',
	'regex' : False,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Any forward slash',
	'word' : None
}

21: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : False,
	'find' : '[^\\.\\,;:?!][\\\'\\"\\Â»](?=[\\s\\)\\]])',
	'label' : 'endqnop',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Endquote without preceding punctuation',
	'word' : None
}

22: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : False,
	'find' : '[\\.\\,;:?!]{2,}',
	'label' : 'dblpunc',
	'regex' : True,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Two or more of . , ; : ? !',
	'word' : None
}

23: {		'all' : None,
	'andnext' : None,
	'andprior' : None,
	'case' : None,
	'find' : '*',
	'label' : '*',
	'regex' : False,
	'rep1' : None,
	'rep2' : None,
	'rep3' : None,
	'tooltip' : 'Any asterisk',
	'word' : None
}

